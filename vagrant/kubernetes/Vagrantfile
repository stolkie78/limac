VAGRANTFILE_API_VERSION = "2"

# Definieer het aantal nodes
NUM_NODES = 3
BOX_NAME = "generic/rocky9"
K8S_VERSION = "1.28.0-0"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Algemene configuraties
  config.vm.box = BOX_NAME
  config.ssh.insert_key = false
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.cpus = 2
  end

  # Gemeenschappelijke setup voor alle nodes
  config.vm.provision "shell", inline: <<-SHELL
    # Installeer Docker
    sudo dnf install -y epel-release
    sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
    sudo dnf install -y docker-ce docker-ce-cli containerd.io
    sudo systemctl enable --now docker

    # Schakel Kubernetes repository in voor RHEL-gebaseerde systemen
    sudo dnf install -y curl
    sudo cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

    # Installeer Kubernetes componenten
    sudo dnf install -y kubelet-#{K8S_VERSION} kubeadm-#{K8S_VERSION} kubectl-#{K8S_VERSION}
    sudo systemctl enable --now kubelet

    # Schakel SELinux uit (vereist voor Kubernetes)
    sudo setenforce 0
    sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

    # Schakel br_netfilter module in
    sudo modprobe br_netfilter
    sudo tee /etc/sysctl.d/k8s.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
    sudo sysctl --system
  SHELL

  # Master node configuratie
  config.vm.define "master" do |master|
    master.vm.hostname = "k8s-master"
    master.vm.network "private_network", ip: "192.168.56.10"

    master.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-master"
    end

    # Initialiseer Kubernetes master node
    master.vm.provision "shell", inline: <<-SHELL
      sudo kubeadm init --pod-network-cidr=10.244.0.0/16

      # Setup kubeconfig voor de vagrant-gebruiker
      mkdir -p /home/vagrant/.kube
      sudo cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      sudo chown vagrant:vagrant /home/vagrant/.kube/config

      # Install Flannel als netwerk plugin
      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    SHELL
  end

  # Worker nodes configuratie
  (1..NUM_NODES).each do |i|
    config.vm.define "worker#{i}" do |worker|
      worker.vm.hostname = "k8s-worker#{i}"
      worker.vm.network "private_network", ip: "192.168.56.#{10 + i}"

      worker.vm.provider "virtualbox" do |vb|
        vb.name = "k8s-worker#{i}"
      end

      # Voeg de worker nodes toe aan het Kubernetes cluster
      worker.vm.provision "shell", inline: <<-SHELL
        JOIN_COMMAND=$(sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.56.10 "sudo kubeadm token create --print-join-command")
        sudo $JOIN_COMMAND
      SHELL
    end
  end
end